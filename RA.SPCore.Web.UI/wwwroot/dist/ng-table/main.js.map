{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/common-utils/http.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpService } from 'src/common-utils/http.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit{\r\n\r\n  progress = false;\r\n  addtoMenuModal = false;\r\n  list = [];\r\n  paginatedData = []\r\n  successMsg = \"\"\r\n  globalAttibute: any;\r\n  search = \"\";\r\n  constructor(private httpService: HttpService) {   }\r\n\r\n  ngOnInit() {\r\n    // this.getGlobalAttributeList();\r\n  }\r\n  blockbtn(e:any) {\r\n    if(e.keyCode == 9 || e.keyCode == 16  ) { return ;}\r\n  }\r\n\r\n  getTextList() {\r\n    this.progress = true\r\n    let body = {\r\n      \"Text\" : this.search\r\n    }\r\n    this.httpService.post(\"getData\", body)\r\n      .subscribe(\r\n        (response) => {\r\n          this.list = response.body   \r\n          this.paginatedData = this.list\r\n          this.progress = false\r\n        },\r\n        (error) => console.log(error)\r\n      );\r\n  }\r\n}\r\n\r\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-4 mb-2\">\r\n      \r\n    </div>\r\n      <div class=\"col-md-4 mb-2\">\r\n        <input type=\"text\" class=\"mr-1 form-control\" [(ngModel)]=\"search\" />\r\n      </div>\r\n      <div class=\"col-md-4 mb-2\">\r\n        <button\r\n          type=\"button\"\r\n          role=\"button\"\r\n          tabIndex=\"0\"\r\n          class=\"btn btn-secondary\"\r\n          (click)=\"getTextList()\"\r\n        >\r\n        <i *ngIf=\"progress\" aria-hidden=true class=\" fas fa-spinner fa-pulse\"></i>\r\n        <i *ngIf=\"!progress\" >Search</i>\r\n          \r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"card mt-2\" >\r\n  <div class=\"card-body\">\r\n    <div class=\"table-responsive datatab\">\r\n      <table class=\"table result-table\" >\r\n        <thead>\r\n          <th >OID</th>\r\n          <th >Username</th>\r\n          <th >FirstName</th>\r\n          <th >LastName</th>\r\n          \r\n          <th >Email1</th>\r\n          <th >Email2</th>\r\n          <th >Status</th>\r\n        </thead>\r\n        <tbody *ngIf=\"paginatedData.length == 0\">\r\n          <tr >\r\n              <td colspan=\"7\" *ngIf=\"progress\" class=\"text-center\"> <h4><i aria-hidden=true class=\"fas fa-spinner fa-pulse\"></i></h4></td>\r\n              <td colspan=\"7\" *ngIf=\"!progress\" class=\"text-center\"> <h4>No result found</h4></td>\r\n          </tr>\r\n      </tbody>\r\n        <tbody *ngIf=\"paginatedData.length > 0\">\r\n          <tr *ngFor=\"let element of paginatedData\">\r\n            <td>\r\n              <span class=\"mobile-label\">OID</span>\r\n              <span class=\"table-data\"> {{element.oid}}</span>\r\n            </td>\r\n            <td>\r\n              <span class=\"mobile-label\">Username</span>\r\n              <span class=\"table-data\"> {{element.username}}</span>\r\n            </td>\r\n            <td>\r\n              <span class=\"mobile-label\">FirstName</span>\r\n              <span class=\"table-data\"> {{element.firstName}}</span>\r\n            </td>\r\n            <td>\r\n              <span class=\"mobile-label\">LastName</span>\r\n              <span class=\"table-data\"> {{element.lastName}}</span>\r\n            </td>\r\n            <td>\r\n              <span class=\"mobile-label\">LastName</span>\r\n              <span class=\"table-data\"> {{element.emailOne}}</span>\r\n            </td>\r\n            <td>\r\n              <span class=\"mobile-label\">LastName</span>\r\n              <span class=\"table-data\"> {{element.emailTwo}}</span>\r\n            </td>\r\n            <td>\r\n              <span class=\"mobile-label\">LastName</span>\r\n              <span class=\"table-data\"> {{element.status}}</span>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>","import { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { map } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class HttpService {\r\n    constructor(private http: HttpClient) { }\r\n    private baseUrl = \"\";\r\n    getBaseUrl(value: any) {\r\n        this.baseUrl = value\r\n    }\r\n\r\n    public notes = \"\"\r\n\r\n    public post(url: string, data: any): Observable<any> {  \r\n      \r\n      // let requestdata: any = window[\"requestdata\"];\r\n      // this.baseUrl = requestdata[\"url\"]\r\n\r\n\r\n       this.baseUrl = 'https://localhost:7147/'\r\n\r\n      return this.http.post<any>(this.baseUrl+url, data,{ observe: 'response' }).pipe(map((response: any) => response))\r\n  \r\n    } \r\n\r\n    // public post(url: string, data: any): Observable<any> {  \r\n    //     if(this.isXsrfTokenRequired(url)){\r\n    //       const token: any = document.getElementById('RequestVerificationToken');\r\n    //       //const headers = {'X-XSRF-TOKEN': token.value}; \r\n    //       const headers = {'__RequestVerificationToken': token.value}; \r\n    //       return this.http.post<any>(this.baseUrl+url, data,{ observe: 'response', headers }); \r\n    //     }\r\n    //     else{\r\n    //       return this.http.post<any>(this.baseUrl+url, data,{ observe: 'response' });\r\n    //     }  \r\n    // } \r\n\r\n    // check the url, which needed XSRF-TOKEN \r\n    isXsrfTokenRequired(url: string) {\r\n      let requiredUrls = ['searchPropertyAjax1', 'searchPeopleAjax1'];\r\n      let isRequired = false;\r\n      for (let i = 0; i < requiredUrls.length; i++) {\r\n        if(requiredUrls[i]==url){\r\n          isRequired = true;\r\n          break;\r\n        }      \r\n      }\r\n      return isRequired;\r\n    }\r\n\r\n    // get XSRF-TOKEN from Cookie, if cookie contains XSRF-TOKEN\r\n    getXsrfTokenFromCookie() {\r\n      let nameEQ = \"XSRF-TOKEN=\";\r\n      let ca = document.cookie.split(';');\r\n      for(let i=0;i < ca.length;i++) {\r\n        let c = ca[i];\r\n        while (c.charAt(0)==' ') c = c.substring(1,c.length);\r\n        if (c.indexOf(nameEQ) == 0) {\r\n          return c.substring(nameEQ.length,c.length);\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n\r\n\r\n    public getTaxViewGeneralInfo(){\r\n      // let requestdata: any = window[\"requestdata\"];\r\n      var body = {\r\n        \"token\": '1234',\r\n      };\r\n  \r\n     return this.post(\"GetTaxViewGeneralInfo\", body).subscribe({\r\n      next: (res) => {\r\n        this.notes = res.body.text\r\n\r\n      },\r\n      error: (error) => { console.log(error) }\r\n    });\r\n    }\r\n  \r\n    // getTaxPortalAccountSummary() {\r\n    //   // let requestdata: any = window[\"requestdata\"];\r\n    //   var body = {\r\n    //     \"token\": '1234',\r\n    //     RollNumber: this.rollNumber\r\n    //   };\r\n  \r\n    //   this.httpService.post(\"GetTaxPortalAccountSummary\", body).subscribe({\r\n    //     next: (res) => {\r\n    //       this.accountSummary = res.body\r\n    //       if(this.accountSummary.taxLevyHistoryList.length === 0 || this.accountSummary.taxLevyHistoryList === null){this.progress = false; return}\r\n    //       let covertChartData = this.accountSummary.taxLevyHistoryList.map((x)=> { return +x.amount.toFixed(2)})\r\n    //       this.asseHisChart = this.chartService.loadBasicBarChart(\"Tax Levy History\", \"Year\", this.accountSummary.taxYearList, [{  name: 'Tax', data: covertChartData}])\r\n    //       this.showAsseHisChart = true\r\n    //       let covertChartDataPie = [{name:\"Region\", y: this.accountSummary.taxLevyRegion},{name:\"School\", y: this.accountSummary.taxLevySchool}, {name:\"City\", y: this.accountSummary.taxLevyCity}]\r\n    //       this.taxLevyChart = this.chartService.loadPieChart (\"Tax Levy Breakdown\",  covertChartDataPie ,\"\")\r\n    //       this,this.showTaxLevyChart = true\r\n  \r\n    //       this.progress = false\r\n    //     },\r\n    //     error: (error) => { console.log(error) }\r\n    //   });\r\n    // }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///"}