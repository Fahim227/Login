{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/common-utils/http.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpService } from 'src/common-utils/http.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n\n  progress = false;\n  addtoMenuModal = false;\n  list = [];\n  paginatedData = []\n  successMsg = \"\"\n  globalAttibute: any;\n  search = \"\";\n  constructor(private httpService: HttpService) {   }\n\n  ngOnInit() {\n    // this.getGlobalAttributeList();\n  }\n  blockbtn(e:any) {\n    if(e.keyCode == 9 || e.keyCode == 16  ) { return ;}\n  }\n\n  getTextList() {\n    this.progress = true\n    let body = {\n      \"Text\" : this.search\n    }\n    this.httpService.post(\"getData\", body)\n      .subscribe(\n        (response) => {\n          this.list = response.body   \n          this.paginatedData = this.list\n          this.progress = false\n        },\n        (error) => console.log(error)\n      );\n  }\n}\n\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-4 mb-2\">\n      \n    </div>\n      <div class=\"col-md-4 mb-2\">\n        <input type=\"text\" class=\"mr-1 form-control\" [(ngModel)]=\"search\" />\n      </div>\n      <div class=\"col-md-4 mb-2\">\n        <button\n          type=\"button\"\n          role=\"button\"\n          tabIndex=\"0\"\n          class=\"btn btn-secondary\"\n          (click)=\"getTextList()\"\n        >\n        <i *ngIf=\"progress\" aria-hidden=true class=\"fas fa-spinner fa-pulse float-right\"></i>\n        <i *ngIf=\"!progress\" >Search</i>\n          \n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"card mt-2\" *ngIf=\"paginatedData.length > 0\">\n  <div class=\"card-body\">\n    <div class=\"table-responsive datatab\">\n      <table class=\"table result-table\" >\n        <thead>\n          <th >OID</th>\n          <th >Username</th>\n          <th >FirstName</th>\n          <th >LastName</th>\n          \n          <th >Email1</th>\n          <th >Email2</th>\n          <th >Status</th>\n        </thead>\n        <tbody *ngIf=\"paginatedData.length > 0\">\n          <tr *ngFor=\"let element of paginatedData\">\n            <td>\n              <span class=\"mobile-label\">OID</span>\n              <span class=\"table-data\"> {{element.oid}}</span>\n            </td>\n            <td>\n              <span class=\"mobile-label\">Username</span>\n              <span class=\"table-data\"> {{element.username}}</span>\n            </td>\n            <td>\n              <span class=\"mobile-label\">FirstName</span>\n              <span class=\"table-data\"> {{element.firstName}}</span>\n            </td>\n            <td>\n              <span class=\"mobile-label\">LastName</span>\n              <span class=\"table-data\"> {{element.lastName}}</span>\n            </td>\n            <td>\n              <span class=\"mobile-label\">LastName</span>\n              <span class=\"table-data\"> {{element.emailOne}}</span>\n            </td>\n            <td>\n              <span class=\"mobile-label\">LastName</span>\n              <span class=\"table-data\"> {{element.emailTwo}}</span>\n            </td>\n            <td>\n              <span class=\"mobile-label\">LastName</span>\n              <span class=\"table-data\"> {{element.status}}</span>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { map } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class HttpService {\r\n    constructor(private http: HttpClient) { }\r\n    private baseUrl = \"\";\r\n    getBaseUrl(value: any) {\r\n        this.baseUrl = value\r\n    }\r\n\r\n    public notes = \"\"\r\n\r\n    public post(url: string, data: any): Observable<any> {  \r\n      \r\n      // let requestdata: any = window[\"requestdata\"];\r\n      // this.baseUrl = requestdata[\"url\"]\r\n\r\n\r\n       this.baseUrl = 'https://localhost:7147/'\r\n\r\n      return this.http.post<any>(this.baseUrl+url, data,{ observe: 'response' }).pipe(map((response: any) => response))\r\n  \r\n    } \r\n\r\n    // public post(url: string, data: any): Observable<any> {  \r\n    //     if(this.isXsrfTokenRequired(url)){\r\n    //       const token: any = document.getElementById('RequestVerificationToken');\r\n    //       //const headers = {'X-XSRF-TOKEN': token.value}; \r\n    //       const headers = {'__RequestVerificationToken': token.value}; \r\n    //       return this.http.post<any>(this.baseUrl+url, data,{ observe: 'response', headers }); \r\n    //     }\r\n    //     else{\r\n    //       return this.http.post<any>(this.baseUrl+url, data,{ observe: 'response' });\r\n    //     }  \r\n    // } \r\n\r\n    // check the url, which needed XSRF-TOKEN \r\n    isXsrfTokenRequired(url: string) {\r\n      let requiredUrls = ['searchPropertyAjax1', 'searchPeopleAjax1'];\r\n      let isRequired = false;\r\n      for (let i = 0; i < requiredUrls.length; i++) {\r\n        if(requiredUrls[i]==url){\r\n          isRequired = true;\r\n          break;\r\n        }      \r\n      }\r\n      return isRequired;\r\n    }\r\n\r\n    // get XSRF-TOKEN from Cookie, if cookie contains XSRF-TOKEN\r\n    getXsrfTokenFromCookie() {\r\n      let nameEQ = \"XSRF-TOKEN=\";\r\n      let ca = document.cookie.split(';');\r\n      for(let i=0;i < ca.length;i++) {\r\n        let c = ca[i];\r\n        while (c.charAt(0)==' ') c = c.substring(1,c.length);\r\n        if (c.indexOf(nameEQ) == 0) {\r\n          return c.substring(nameEQ.length,c.length);\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n\r\n\r\n    public getTaxViewGeneralInfo(){\r\n      // let requestdata: any = window[\"requestdata\"];\r\n      var body = {\r\n        \"token\": '1234',\r\n      };\r\n  \r\n     return this.post(\"GetTaxViewGeneralInfo\", body).subscribe({\r\n      next: (res) => {\r\n        this.notes = res.body.text\r\n\r\n      },\r\n      error: (error) => { console.log(error) }\r\n    });\r\n    }\r\n  \r\n    // getTaxPortalAccountSummary() {\r\n    //   // let requestdata: any = window[\"requestdata\"];\r\n    //   var body = {\r\n    //     \"token\": '1234',\r\n    //     RollNumber: this.rollNumber\r\n    //   };\r\n  \r\n    //   this.httpService.post(\"GetTaxPortalAccountSummary\", body).subscribe({\r\n    //     next: (res) => {\r\n    //       this.accountSummary = res.body\r\n    //       if(this.accountSummary.taxLevyHistoryList.length === 0 || this.accountSummary.taxLevyHistoryList === null){this.progress = false; return}\r\n    //       let covertChartData = this.accountSummary.taxLevyHistoryList.map((x)=> { return +x.amount.toFixed(2)})\r\n    //       this.asseHisChart = this.chartService.loadBasicBarChart(\"Tax Levy History\", \"Year\", this.accountSummary.taxYearList, [{  name: 'Tax', data: covertChartData}])\r\n    //       this.showAsseHisChart = true\r\n    //       let covertChartDataPie = [{name:\"Region\", y: this.accountSummary.taxLevyRegion},{name:\"School\", y: this.accountSummary.taxLevySchool}, {name:\"City\", y: this.accountSummary.taxLevyCity}]\r\n    //       this.taxLevyChart = this.chartService.loadPieChart (\"Tax Levy Breakdown\",  covertChartDataPie ,\"\")\r\n    //       this,this.showTaxLevyChart = true\r\n  \r\n    //       this.progress = false\r\n    //     },\r\n    //     error: (error) => { console.log(error) }\r\n    //   });\r\n    // }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}